!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs/operators"),require("rxjs"),require("@angular/forms"),require("@angular/common"),require("@angular/platform-browser/animations"),require("@angular/material"),require("@angular/material/progress-spinner"),require("@angular/core")):"function"==typeof define&&define.amd?define("@nvd264/ng-dynamic-form",["exports","rxjs/operators","rxjs","@angular/forms","@angular/common","@angular/platform-browser/animations","@angular/material","@angular/material/progress-spinner","@angular/core"],e):e((o.nvd264=o.nvd264||{},o.nvd264["ng-dynamic-form"]={}),o.rxjs.operators,o.rxjs,o.ng.forms,o.ng.common,o.ng.platformBrowser.animations,o.ng.material,o.ng.material["progress-spinner"],o.ng.core)}(this,function(o,r,t,a,e,n,i,l,s){"use strict";var c=function(o,e){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,e){o.__proto__=e}||function(o,e){for(var r in e)e.hasOwnProperty(r)&&(o[r]=e[r])})(o,e)};function p(o,e){function r(){this.constructor=o}c(o,e),o.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var u=function(){return(u=Object.assign||function(o){for(var e,r=1,t=arguments.length;r<t;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(o[n]=e[n]);return o}).apply(this,arguments)};function d(o,e){var r="function"==typeof Symbol&&o[Symbol.iterator];if(!r)return o;var t,n,a=r.call(o),i=[];try{for(;(void 0===e||0<e--)&&!(t=a.next()).done;)i.push(t.value)}catch(l){n={error:l}}finally{try{t&&!t.done&&(r=a["return"])&&r.call(a)}finally{if(n)throw n.error}}return i}function m(){for(var o=[],e=0;e<arguments.length;e++)o=o.concat(d(arguments[e]));return o}var f={CHECKBOX:"CHECKBOX",DROPDOWN:"DROPDOWN",RADIO:"RADIO",TEXTAREA:"TEXTAREA",TEXTBOX:"TEXTBOX",CUSTOM:"CUSTOM"},h={REQUIRED:"required",MIN:"min",MAX:"max",MIN_LENGTH:"minlength",MAX_LENGTH:"maxlength",EMAIL:"email",PATTERN:"pattern"},v=(Object.defineProperty(g.prototype,"isRequired",{get:function(){return-1<this.validators.findIndex(function(o){return o.validate===h.REQUIRED})},enumerable:!0,configurable:!0}),g);function g(o){void 0===o&&(o={}),this.value=o.value,this.key=o.key||"",this.label=o.label||"",this.validators=o.validators||[],this.order=o.order===undefined?1:o.order,this.controlType=o.controlType||""}var y,b=(p(x,y=v),x);function x(o){void 0===o&&(o={});var e=y.call(this,o)||this;return e.controlType=f.DROPDOWN,e.options=[],e.multiple=!1,e.hideSearchBox=!1,e.searchText="",e.loading=!1,e.searchOnServer=!1,e.supportLoadMore=!1,e.labelValue=o.labelValue||"",e.labelName=o.labelName||"",e.multiple=!!o.multiple,e.searchText=o.searchText||"",e.hideSearchBox=!!o.hideSearchBox,e.multiple&&!Array.isArray(e.value)&&(e.value=[e.value]),"function"==typeof o.onSearch&&(e.onSearch=o.onSearch,e.searchOnServer=!0),"function"==typeof o.loadMore&&(e.loadMore=o.loadMore,e.supportLoadMore=!0),t.isObservable(o.options)?o.options.pipe(r.tap(function(){return e.loading=!0})).subscribe(function(o){e.options=o,e.loading=!1}):e.options=o.options||[],e}var C=(T.prototype.getValidatesInstance=function(o){for(var e=[],r=0;r<o.length;r++){var t=o[r];t.validate===h.REQUIRED&&e.push(a.Validators.required),t.validate===h.MIN&&e.push(a.Validators.min(t.data)),t.validate===h.MAX&&e.push(a.Validators.max(t.data)),t.validate===h.MIN_LENGTH&&e.push(a.Validators.minLength(t.data)),t.validate===h.MAX_LENGTH&&e.push(a.Validators.maxLength(t.data)),t.validate===h.EMAIL&&e.push(a.Validators.email)}return e},T.prototype.getErrorMessage=function(o,e){var r=o.find(function(o){return o.validate===e});return r?r.message:""},T.prototype.getValidateByErrorType=function(o,e){return o.find(function(o){return o.validate===e})},T.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],T.ctorParameters=function(){return[]},T.ngInjectableDef=s.defineInjectable({factory:function(){return new T},token:T,providedIn:"root"}),T);function T(){}var E=(O.prototype.toFormGroup=function(o){var r=this,t={};return o.forEach(function(o){if(o.controlType===f.CHECKBOX)t[o.key]=r.generateCheckboxes(o);else{var e=r.formErrorService.getValidatesInstance(o.validators);t[o.key]=new a.FormControl(o.value||"",e)}}),new a.FormGroup(t)},O.prototype.generateCheckboxes=function(t){var o=t.options.map(function(o){var e=t.labelValue||"value",r=!1;return r=Array.isArray(t.value)?-1!==t.value.indexOf(o[e]):o[e]===t.value,new a.FormControl(r)}),e=this.formErrorService.getValidateByErrorType(t.validators,h.REQUIRED);return e?new a.FormArray(o,function n(r){return void 0===r&&(r=1),function(o){var e=o.controls.map(function(o){return o.value}).reduce(function(o,e){return e?o+e:o},0);return r<=e?null:{required:!0}}}(+e.data||1)):new a.FormArray(o)},O.prototype.markFormGroupTouched=function(o){var e=this;Object.values(o.controls).forEach(function(o){o.markAsTouched(),o.controls&&e.markFormGroupTouched(o)})},O.prototype.getControlsData=function(o){var e={};return o.forEach(function(o){e[o.key]=o.value}),e},O.prototype.getSelectedCheckboxesData=function(a,o){var i=o.filter(function(o){return o.controlType===f.CHECKBOX});if(i.length){var e=function(e){var o=i.find(function(o){return o.key===e});if(!o)return"continue";var r=o.options||[];if(a[e].length!==r.length)throw Error("Number of checkboxes and options doesn't equal.");for(var t=[],n=0;n<a[e].length;n++)!0===a[e][n]&&t.push(r[n][o.labelValue]);a[e]=t};for(var r in a)e(r)}return a},O.prototype.convertCheckboxesToFormData=function(e,r){return r.options.map(function(o){return!!(-1<e.indexOf(o[r.labelValue]))})},O.prototype.resetSelectedOptionsFromFormData=function(o,e,r){var t=(o=this.getSelectedCheckboxesData(o,r))[e.key],n=[];return e.options.map(function(o){-1<t.indexOf(o[e.labelValue])&&n.push(o[e.labelValue])}),n},O.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],O.ctorParameters=function(){return[{type:C}]},O.ngInjectableDef=s.defineInjectable({factory:function(){return new O(s.inject(C))},token:O,providedIn:"root"}),O);function O(o){this.formErrorService=o}var k=(M.prototype.scrollDropdownToTop=function(){document.querySelector(".panel-searchbox").scrollTop=0},M.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],M.ctorParameters=function(){return[]},M.ngInjectableDef=s.defineInjectable({factory:function(){return new M},token:M,providedIn:"root"}),M);function M(){}var w=(I.prototype.ngOnInit=function(){this.originControls=JSON.parse(JSON.stringify(this.controls)),this.form=this.formControlService.toFormGroup(this.controls),this.watchFilterDropdownOptions(),this.watchLoadMoreDropdownOptions()},I.prototype.ngAfterViewInit=function(){var i=this;this.dynamicDropdown.forEach(function(a){a.openedChange.pipe(r.takeUntil(i.unsubscribe$)).subscribe(function(o){if(o){var e=a._elementRef.nativeElement,r=a.panel.nativeElement,t=e.getAttribute("data-key"),n=i.getControl(t);n&&n.supportLoadMore&&r.addEventListener("scroll",function(o){return i.loadMoreOptionsOnScroll(o,n)})}else i.filterControl=null,i.loadMoreControl=null})})},I.prototype.ngOnDestroy=function(){this.unsubscribe$.next(),this.unsubscribe$.complete()},Object.defineProperty(I.prototype,"formControls",{get:function(){return this.form.controls},enumerable:!0,configurable:!0}),I.prototype.getControl=function(e,r){return void 0===r&&(r=null),this.controls.find(function(o){return r?o.key===e&&o.controlType===r:o.key===e})},I.prototype.loadMoreOptionsOnScroll=function(o,e){var r=o.target,t=r.scrollTop,n=r.clientHeight;r.scrollHeight<=t+n&&e.supportLoadMore&&this.loadMoreOptions$.next(e)},I.prototype.updateFormData=function(t){var n=this;Object.keys(t).forEach(function(o){var e,r=n.getControl(o,f.CHECKBOX);e=r?n.formControlService.convertCheckboxesToFormData(t[o],r):t[o],n.form.get(o)&&n.form.get(o).setValue(e)})},I.prototype.resetForm=function(o){o.preventDefault();for(var e=0;e<this.controls.length;e++)this.controls[e]instanceof b&&(this.controls[e].options=this.originControls[e].options);var r=this.formControlService.getControlsData(this.originControls);this.updateFormData(r)},I.prototype.onFilterOptions=function(e,r){r.searchOnServer?this.filterOptions$.next({control:r,searchText:e}):r.options.map(function(o){-1<o[r.labelName].toLowerCase().indexOf(e.toLowerCase())?o.hidden=!1:o.hidden=!0})},I.prototype.watchFilterDropdownOptions=function(){var s=this;this.filterOptions$.pipe(r.debounceTime(400),r.distinctUntilKeyChanged("searchText"),r.map(function(o){return s.filterControl=o.control,s.filterControl.loading=!0,s.helperService.scrollDropdownToTop(),o}),r.switchMap(function(o){return o.control.onSearch(o.searchText)}),r.takeUntil(this.unsubscribe$)).subscribe(function(o){if(Array.isArray(o)&&s.filterControl){var e=s.filterControl,r=e.key,t=e.labelValue,n=u({},s.form.value),a=(n=s.formControlService.getSelectedCheckboxesData(n,s.controls))[r],i=s.filterControl.options.filter(function(o){return-1<a.indexOf(o[t])}),l=o.filter(function(o){var e=o[t];return!i.find(function(o){return o[t]===e})});s.setDropdownOptions(r,m(i,l)),s.filterControl.loading=!1}})},I.prototype.watchLoadMoreDropdownOptions=function(){var n=this;this.loadMoreOptions$.pipe(r.debounceTime(400),r.map(function(o){return n.loadMoreControl=o,n.loadMoreControl.loading=!0,o}),r.exhaustMap(function(o){return o.loadMore(o.searchText)}),r.takeUntil(this.unsubscribe$)).subscribe(function(o){var r=n.getControl(n.loadMoreControl.key),t=r.labelValue;if(Array.isArray(o)&&o.length){var e=o.filter(function(e){return!r.options.find(function(o){return o[t]===e[t]})});r.options=m(r.options,e)}n.loadMoreControl.loading=!1})},I.prototype.setDropdownOptions=function(o,e){var r,t=this.getControl(o,f.DROPDOWN);if(t){t.options=e;var n=this.formControlService.resetSelectedOptionsFromFormData(this.form.value,t,this.controls);this.updateFormData(((r={})[o]=n,r))}},I.prototype.onSubmit=function(o){if(o.preventDefault(),this.form.invalid)return this.formControlService.markFormGroupTouched(this.form),!1;var e=u({},this.form.value);e=this.formControlService.getSelectedCheckboxesData(e,this.controls),this.submit.emit(e)},I.decorators=[{type:s.Component,args:[{selector:"lib-dynamic-form",template:'<form [formGroup]="form" class="container">\n  \x3c!-- Form controls --\x3e\n  <div *ngFor="let control of controls" class="form-row">\n    <div [ngSwitch]="control.controlType">\n      \x3c!-- Text box --\x3e\n      <mat-form-field *ngSwitchCase="controlTypes.TEXTBOX">\n        <input\n          matInput\n          [formControlName]="control.key"\n          [type]="control[\'type\']"\n          [placeholder]="control.label"\n          [required]="control.isRequired"\n          [autocomplete]="control[\'type\'] === \'password\'"\n        />\n        <mat-error\n          *ngIf="form.get(control.key).errors && form.get(control.key).touched"\n        >\n          <error-messages\n            [errors]="form.get(control.key).errors"\n            [validators]="control.validators"\n          ></error-messages>\n        </mat-error>\n      </mat-form-field>\n      \x3c!-- End text box --\x3e\n\n      \x3c!-- Textarea --\x3e\n      <mat-form-field *ngSwitchCase="controlTypes.TEXTAREA">\n        <textarea\n          matInput\n          [formControlName]="control.key"\n          [placeholder]="control.label"\n          [required]="control.isRequired"\n        ></textarea>\n        <mat-error\n          *ngIf="form.get(control.key).errors && form.get(control.key).touched"\n        >\n          <error-messages\n            [errors]="form.get(control.key).errors"\n            [validators]="control.validators"\n          ></error-messages>\n        </mat-error>\n      </mat-form-field>\n      \x3c!-- End textarea --\x3e\n\n      \x3c!-- Dropdown --\x3e\n      <mat-form-field *ngSwitchCase="controlTypes.DROPDOWN">\n        <mat-select\n          [placeholder]="control.label"\n          [formControlName]="control.key"\n          [required]="control.isRequired"\n          [multiple]="control[\'multiple\']"\n          [attr.data-key]="control.key"\n          disableOptionCentering\n          #dynamicDropdown\n          [panelClass]="!control[\'hideSearchBox\'] ? \'panel-searchbox\' : \'\'"\n        >\n          <mat-option [class.multiple-select]="control[\'multiple\']" class="search-box" *ngIf="!control[\'hideSearchBox\']" [disabled]="true">\n            <input\n              matInput\n              (ngModelChange)="onFilterOptions($event, control)"\n              [(ngModel)]="control[\'searchText\']"\n              [ngModelOptions]="{standalone: true}"\n              placeholder="Enter your search text..."\n              autocomplete="false"\n              (keydown)="$event.stopPropagation()"\n            >\n            <mat-progress-spinner\n              *ngIf="control[\'loading\']"\n              class="search-box-spinner"\n              color="primary"\n              mode="indeterminate"\n              diameter="20"\n            >\n            </mat-progress-spinner>\n          </mat-option>\n          <ng-container *ngFor="let opt of control[\'options\']">\n            <mat-option\n              *ngIf="!opt[\'hidden\']"\n              [value]="\n                control[\'labelValue\'] ? opt[control[\'labelValue\']] : opt.value\n              "\n            >\n              {{ control[\'labelName\'] ? opt[control[\'labelName\']] : opt.label }}\n            </mat-option>\n          </ng-container>\n        </mat-select>\n      </mat-form-field>\n      \x3c!-- End dropdown --\x3e\n\n      \x3c!-- Checkbox --\x3e\n      <div *ngSwitchCase="controlTypes.CHECKBOX" class="custom-section">\n        <label\n          class="custom-mat-form-field-label"\n          [class.required]="control.isRequired"\n          >{{ control.label }}</label\n        >\n        <section [formArrayName]="control.key" class="checkbox-section">\n          <mat-checkbox\n            *ngFor="let chk of form.get(control.key)[\'controls\']; let i = index"\n            [formControlName]="i"\n            class="dyn-checkbox"\n          >\n            {{\n              control[\'labelName\']\n                ? control[\'options\'][i][control[\'labelName\']]\n                : control[\'options\'][i].label\n            }}\n          </mat-checkbox>\n        </section>\n        <mat-error\n          *ngIf="form.get(control.key).errors && form.get(control.key).touched"\n        >\n          <error-messages\n            [errors]="form.get(control.key).errors"\n            [validators]="control.validators"\n          ></error-messages>\n        </mat-error>\n      </div>\n      \x3c!-- End checkbox --\x3e\n\n      \x3c!-- Radio --\x3e\n      <div *ngSwitchCase="controlTypes.RADIO" class="custom-section">\n        <label\n          class="custom-mat-form-field-label"\n          [class.required]="control.isRequired"\n          >{{ control.label }}</label\n        >\n        <section>\n          <mat-radio-group\n            class="example-radio-group"\n            [formControlName]="control.key"\n          >\n            <mat-radio-button\n              class="dyn-radio"\n              *ngFor="let opt of control[\'options\']"\n              [value]="\n                control[\'labelValue\'] ? opt[control[\'labelValue\']] : opt.value\n              "\n            >\n              {{ control[\'labelName\'] ? opt[control[\'labelName\']] : opt.label }}\n            </mat-radio-button>\n          </mat-radio-group>\n        </section>\n        <mat-error\n          *ngIf="form.get(control.key).errors && form.get(control.key).touched"\n        >\n          <error-messages\n            [errors]="form.get(control.key).errors"\n            [validators]="control.validators"\n          ></error-messages>\n        </mat-error>\n      </div>\n      \x3c!-- End radio --\x3e\n\n      \x3c!-- Custom form field --\x3e\n      <div *ngSwitchCase="controlTypes.CUSTOM" class="custom-section">\n        <custom-field [form]="form" [control]="control"></custom-field>\n        <mat-error\n          *ngIf="form.get(control.key).errors && form.get(control.key).touched"\n        >\n          <error-messages\n            [errors]="form.get(control.key).errors"\n            [validators]="control.validators"\n          ></error-messages>\n        </mat-error>\n      </div>\n      \x3c!-- End Custom form field --\x3e\n    </div>\n  </div>\n  \x3c!-- End form controls --\x3e\n\n  \x3c!-- Actions --\x3e\n  <div class="button-row">\n    <button\n      mat-raised-button\n      [color]="actions?.submit?.color || \'primary\'"\n      (click)="onSubmit($event)"\n    >\n      {{ actions?.submit?.label || \'Submit\' }}\n    </button>\n\n    <button\n      mat-raised-button\n      [color]="actions?.reset?.color || \'\'"\n      type="button"\n      (click)="resetForm($event)"\n    >\n      {{ actions?.reset?.label || \'Reset\' }}\n    </button>\n  </div>\n  \x3c!-- End actions --\x3e\n</form>\n',styles:['.container{display:flex;flex-direction:column;font-family:Roboto,"Helvetica Neue",sans-serif}.container :not(button){width:100%}.button-row a,.button-row button{margin-right:8px}.form-row{margin-bottom:10px}.dyn-checkbox{margin-right:8px}.dyn-radio{margin-bottom:8px}.custom-mat-form-field-label{font-size:12px}.custom-mat-form-field-label.required::after{content:" *";display:inline;color:#f44336}::ng-deep .mat-option.search-box .mat-pseudo-checkbox{display:none}::ng-deep .mat-option.search-box{position:absolute;top:0;left:0;background:#fff;z-index:999;border-bottom:1px solid #e7e7e7;min-width:calc(100% + 32px)}::ng-deep .mat-option.search-box.multiple-select{min-width:calc(100% + 64px)}.panel-searchbox{-webkit-transform:none!important;transform:none!important;padding-top:48px}::ng-deep .panel-searchbox{-webkit-transform:none!important;transform:none!important;padding-top:48px!important}.search-box-spinner{position:absolute;right:14px;top:14px}.checkbox-section{display:flex;flex-direction:column}']}]}],I.ctorParameters=function(){return[{type:E},{type:k}]},I.propDecorators={controls:[{type:s.Input}],actions:[{type:s.Input}],submit:[{type:s.Output}],dynamicDropdown:[{type:s.ViewChildren,args:["dynamicDropdown"]}]},I);function I(o,e){this.formControlService=o,this.helperService=e,this.controls=[],this.submit=new s.EventEmitter,this.unsubscribe$=new t.Subject,this.controlTypes=f,this.filterOptions$=new t.Subject,this.loadMoreOptions$=new t.Subject}var D=(S.prototype.getErrorMessage=function(o){return this.formErrorService.getErrorMessage(this.validators,o)},S.decorators=[{type:s.Component,args:[{selector:"error-messages",template:'<div class="errors">\n  <div *ngIf="errors.required">\n    {{ getErrorMessage(errorTypes.REQUIRED) }}\n  </div>\n  <div *ngIf="errors.min">\n    {{ getErrorMessage(errorTypes.MIN) }}\n  </div>\n  <div *ngIf="errors.max">\n    {{ getErrorMessage(errorTypes.MAX) }}\n  </div>\n  <div *ngIf="errors.minlength">\n    {{ getErrorMessage(errorTypes.MIN_LENGTH) }}\n  </div>\n  <div *ngIf="errors.maxlength">\n    {{ getErrorMessage(errorTypes.MAX_LENGTH) }}\n  </div>\n  <div *ngIf="errors.email">\n    {{ getErrorMessage(errorTypes.EMAIL) }}\n  </div>\n  <div *ngIf="errors.pattern">\n    {{ getErrorMessage(errorTypes.PATTERN) }}\n  </div>\n</div>\n',styles:['.errors{font-family:Roboto,"Helvetica Neue",sans-serif;font-size:12px}']}]}],S.ctorParameters=function(){return[{type:C}]},S.propDecorators={errors:[{type:s.Input}],validators:[{type:s.Input}]},S);function S(o){this.formErrorService=o,this.validators=[],this.errorTypes=h}var R=(F.decorators=[{type:s.Directive,args:[{selector:"[appDynamicField]"}]}],F.ctorParameters=function(){return[{type:s.ViewContainerRef}]},F);function F(o){this.viewContainerRef=o}var N=(A.prototype.ngOnInit=function(){this.loadComponent()},A.prototype.loadComponent=function(){var o=this.componentFactoryResolver.resolveComponentFactory(this.control.component),e=this.customFieldHost.viewContainerRef;e.clear();var r=e.createComponent(o);r.instance.form=this.form,r.instance.controlKey=this.control.key},A.decorators=[{type:s.Component,args:[{selector:"custom-field",template:'<div [formGroup]="form">\n    <ng-template appDynamicField></ng-template>\n</div>\n\n',styles:[""]}]}],A.ctorParameters=function(){return[{type:s.ComponentFactoryResolver}]},A.propDecorators={form:[{type:s.Input}],control:[{type:s.Input}],customFieldHost:[{type:s.ViewChild,args:[R]}]},A);function A(o){this.componentFactoryResolver=o}var V=(j.decorators=[{type:s.NgModule,args:[{declarations:[w,D,R,N],imports:[a.FormsModule,a.ReactiveFormsModule,e.CommonModule,n.BrowserAnimationsModule,i.MatInputModule,i.MatSelectModule,i.MatCheckboxModule,i.MatRadioModule,i.MatButtonModule,l.MatProgressSpinnerModule],exports:[w]}]}],j);function j(){}var q,X=(p(B,q=v),B);function B(o){void 0===o&&(o={});var e=q.call(this,o)||this;return e.controlType=f.CHECKBOX,e.options=[],e.labelValue=o.labelValue||"",e.labelName=o.labelName||"",e.options=o.options||[],e}var P,L=(p(H,P=v),H);function H(o){void 0===o&&(o={});var e=P.call(this,o)||this;return e.controlType=f.RADIO,e.options=[],e.labelValue=o.labelValue||"",e.labelName=o.labelName||"",e.options=o.options||[],e}var _,$=(p(G,_=v),G);function G(o){void 0===o&&(o={});var e=_.call(this,o)||this;return e.controlType=f.TEXTAREA,e}var U,K=(p(Q,U=v),Q);function Q(o){void 0===o&&(o={});var e=U.call(this,o)||this;return e.controlType=f.TEXTBOX,e.type=o.type||"",e}var W,z=(p(J,W=v),J);function J(o){void 0===o&&(o={});var e=W.call(this,o)||this;return e.controlType=f.CUSTOM,o.component&&(e.component=o.component),e}o.DynamicFormComponent=w,o.DynamicFormModule=V,o.CheckboxControl=X,o.DropdownControl=b,o.FormControlBase=v,o.RadioGroupControl=L,o.TextareaControl=$,o.TextboxControl=K,o.CustomFieldControl=z,o.ErrorTypes=h,o.ɵe=R,o.ɵf=N,o.ɵd=D,o.ɵa=E,o.ɵb=C,o.ɵc=k,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=nvd264-ng-dynamic-form.umd.min.js.map