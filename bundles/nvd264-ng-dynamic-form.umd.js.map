{"version":3,"file":"nvd264-ng-dynamic-form.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@nvd264/ng-dynamic-form/enums/control-types.enum.ts","ng://@nvd264/ng-dynamic-form/enums/error-types.enum.ts","ng://@nvd264/ng-dynamic-form/models/FormControlBase.ts","ng://@nvd264/ng-dynamic-form/models/DropdownControl.ts","ng://@nvd264/ng-dynamic-form/services/form-error.service.ts","ng://@nvd264/ng-dynamic-form/validators/min-checkbox.directive.ts","ng://@nvd264/ng-dynamic-form/services/form-control.service.ts","ng://@nvd264/ng-dynamic-form/services/helper.service.ts","ng://@nvd264/ng-dynamic-form/lib/dynamic-form.component.ts","ng://@nvd264/ng-dynamic-form/lib/error-messages/error-messages.component.ts","ng://@nvd264/ng-dynamic-form/directives/dynamic-field.directive.ts","ng://@nvd264/ng-dynamic-form/lib/custom-field/custom-field.component.ts","ng://@nvd264/ng-dynamic-form/lib/dynamic-form.module.ts","ng://@nvd264/ng-dynamic-form/models/CheckboxControl.ts","ng://@nvd264/ng-dynamic-form/models/RadioGroupControl.ts","ng://@nvd264/ng-dynamic-form/models/TextareaControl.ts","ng://@nvd264/ng-dynamic-form/models/TextboxControl.ts","ng://@nvd264/ng-dynamic-form/models/CustomFieldControl.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum ControlTypes {\n  CHECKBOX = 'CHECKBOX',\n  DROPDOWN = 'DROPDOWN',\n  RADIO = 'RADIO',\n  TEXTAREA = 'TEXTAREA',\n  TEXTBOX = 'TEXTBOX',\n  CUSTOM = 'CUSTOM'\n}\n","export enum ErrorTypes {\n  REQUIRED = 'required',\n  MIN = 'min',\n  MAX = 'max',\n  MIN_LENGTH = 'minlength',\n  MAX_LENGTH = 'maxlength',\n  EMAIL = 'email',\n  PATTERN = 'pattern'\n}\n","import { IValidator } from '../interfaces/IValidator';\nimport { ErrorTypes } from '../enums/error-types.enum';\n\nexport class FormControlBase<T> {\n  value: T;\n  key: string;\n  label: string;\n  validators: IValidator[];\n  order: number;\n  controlType: string;\n\n  constructor(\n    options: {\n      value?: T;\n      key?: string;\n      label?: string;\n      validators?: IValidator[];\n      order?: number;\n      controlType?: string;\n    } = {}\n  ) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.validators = options.validators || [];\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n  }\n\n  get isRequired() {\n    return this.validators.findIndex(v => v.validate === ErrorTypes.REQUIRED) > -1;\n  }\n}\n","import { FormControlBase } from './FormControlBase';\nimport { ControlTypes } from '../enums/control-types.enum';\nimport { tap } from 'rxjs/operators';\nimport { isObservable } from 'rxjs';\n\nexport class DropdownControl extends FormControlBase<any> {\n  controlType = ControlTypes.DROPDOWN;\n  labelValue: string;\n  labelName: string;\n  options: { value: string; label: string }[] = [];\n  multiple = false;\n  onSearch: any;\n  loadMore: any;\n  hideSearchBox = false;\n  searchText = '';\n  loading = false;\n  searchOnServer = false;\n  supportLoadMore = false;\n\n  constructor(options = {}) {\n    super(options);\n\n    this.labelValue = options['labelValue'] || '';\n    this.labelName = options['labelName'] || '';\n    this.multiple = !!options['multiple'];\n    this.searchText = options['searchText'] || '';\n    this.hideSearchBox = !!options['hideSearchBox'];\n\n    if(this.multiple && !Array.isArray(this.value)) {\n      // convert value to array for multi select\n      this.value = [this.value];\n    }\n\n    if(typeof options['onSearch'] === 'function') {\n      this.onSearch =  options['onSearch'];\n      this.searchOnServer = true;\n    }\n\n    if(typeof options['loadMore'] === 'function') {\n      this.loadMore =  options['loadMore'];\n      this.supportLoadMore = true;\n    }\n\n    // set options base type\n    if(isObservable(options['options'])) {\n      options['options'].pipe(\n        tap(() => this.loading = true)\n      ).subscribe(options => {\n        this.options = options;\n        this.loading = false;\n      });\n    } else {\n      this.options = options['options'] || [];\n    }\n  }\n}\n","import { ErrorTypes } from './../enums/error-types.enum';\nimport { ValidatorFn, Validators } from '@angular/forms';\nimport { Injectable } from '@angular/core';\nimport { IValidator } from '../interfaces/IValidator';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormErrorService {\n\n  constructor() { }\n\n  /**\n   * Map validates into instance of angular\n   * @param validates\n   */\n  getValidatesInstance(validators: IValidator[]): ValidatorFn[] {\n    const validatorsList = [];\n    for(let i = 0; i < validators.length; i++) {\n      const validator = validators[i];\n      if(validator.validate === ErrorTypes.REQUIRED) {\n        validatorsList.push(Validators.required);\n      }\n\n      if(validator.validate === ErrorTypes.MIN) {\n        validatorsList.push(Validators.min(validator.data));\n      }\n\n      if(validator.validate === ErrorTypes.MAX) {\n        validatorsList.push(Validators.max(validator.data));\n      }\n\n      if(validator.validate === ErrorTypes.MIN_LENGTH) {\n        validatorsList.push(Validators.minLength(validator.data));\n      }\n\n      if(validator.validate === ErrorTypes.MAX_LENGTH) {\n        validatorsList.push(Validators.maxLength(validator.data));\n      }\n\n      if(validator.validate === ErrorTypes.EMAIL) {\n        validatorsList.push(Validators.email);\n      }\n    }\n\n    return validatorsList;\n  }\n\n  /**\n   * Get error message base error type\n   * @param validators\n   * @param errorType\n   */\n  getErrorMessage(validators: IValidator[], errorType: string): string {\n    const validator = validators.find(v => v.validate === errorType);\n    return validator ? validator.message : '';\n  }\n\n  /**\n   * Get validate by error type\n   * @param validators\n   * @param errorType\n   */\n  getValidateByErrorType(validators: IValidator[], errorType: string) {\n    return validators.find(v => v.validate === errorType);\n  }\n\n}\n","import { FormArray, ValidatorFn } from '@angular/forms';\n\nexport function minSelectedCheckboxes(min = 1) {\n  const validator: ValidatorFn = (formArray: FormArray) => {\n    const totalSelected = formArray.controls\n      // get a list of checkbox values (boolean)\n      .map(control => control.value)\n      // total up the number of checked checkboxes\n      .reduce((prev, next) => (next ? prev + next : prev), 0);\n\n    // if the total is not greater than the minimum, return the error message\n    return totalSelected >= min ? null : { required: true };\n  };\n\n  return validator;\n}\n","import { FormErrorService } from './form-error.service';\nimport { FormControlBase } from './../models/FormControlBase';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { minSelectedCheckboxes } from '../validators/min-checkbox.directive';\nimport { ErrorTypes } from '../enums/error-types.enum';\nimport { DropdownControl } from '../models/DropdownControl';\nimport { CheckboxControl } from '../models/CheckboxControl';\nimport { ControlTypes } from '../enums/control-types.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormControlService {\n  constructor(private formErrorService: FormErrorService) { }\n\n  /**\n   * Convert controls into form group\n   * @params controls\n   * @returns form group instance\n   */\n  toFormGroup(controls: FormControlBase<any>[]) {\n    const group: any = {};\n\n    controls.forEach(c => {\n      if (c.controlType === ControlTypes.CHECKBOX) {\n        group[c.key] = this.generateCheckboxes(c);\n      } else {\n        const validators = this.formErrorService.getValidatesInstance(c.validators);\n        group[c.key] = new FormControl(c.value || '', validators);\n      }\n    });\n    return new FormGroup(group);\n  }\n\n  /**\n   * Generate FormArray check boxes\n   * @param control <FormControlBase>\n   * @returns <FormArray>\n   */\n  private generateCheckboxes(control: FormControlBase<any>) {\n    const chkControls = control['options'].map(opt => {\n      // set checked for checkbox if value equal option\n      const value = control['labelValue'] || 'value';\n      let checked = false;\n      if (Array.isArray(control.value)) {\n        checked = control.value.indexOf(opt[value]) !== -1;\n      } else {\n        checked = opt[value] === control.value;\n      }\n      return new FormControl(checked);\n    });\n    // set required validate for checkbox\n    const validateRequired = this.formErrorService.getValidateByErrorType(control.validators, ErrorTypes.REQUIRED);\n    if (validateRequired) {\n      // set numbers of checked box is required\n      return new FormArray(chkControls, minSelectedCheckboxes(+validateRequired.data || 1));\n    }\n    return new FormArray(chkControls);\n  }\n\n  /**\n   * Marks all controls in a form group as touched\n   * @param formGroup - The form group to touch\n   */\n  markFormGroupTouched(formGroup: FormGroup) {\n    (<any>Object).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  /**\n   * Get controls data for form\n   * @param controls FormControlBase<any>[]\n   */\n  getControlsData(controls: FormControlBase<any>[]) {\n    const result = {};\n    controls.forEach(c => {\n      result[c.key] = c.value;\n    });\n\n    return result;\n  }\n\n  /**\n   * Get selected checkboxes data\n   * @param formData\n   */\n  getSelectedCheckboxesData(formData: any, controls: FormControlBase<any>[]) {\n    let checkboxControls = controls.filter(c => c.controlType === ControlTypes.CHECKBOX);\n    if (checkboxControls.length) {\n      for (let key in formData) {\n        const control = <DropdownControl>checkboxControls.find(c => c.key === key);\n        if (!control) {\n          continue;\n        }\n\n        const options = control.options || [];\n\n        if (formData[key].length !== options.length) {\n          throw Error(`Number of checkboxes and options doesn't equal.`);\n        }\n        const checkboxesData = [];\n        for (let i = 0; i < formData[key].length; i++) {\n          if (formData[key][i] === true) {\n            checkboxesData.push(options[i][control.labelValue]);\n          }\n        }\n\n        formData[key] = checkboxesData;\n      }\n    }\n    return formData;\n  }\n\n  /**\n   * Convert checkboxes to form data\n   * @param checkedValues\n   * @param control\n   */\n  convertCheckboxesToFormData(checkedValues: Array<string | number>, control: CheckboxControl) {\n    return control.options.map(\n      checkbox => {\n        return !!(checkedValues.indexOf(checkbox[control['labelValue']]) > -1);\n      }\n    );\n  }\n\n  /**\n   * Reset Selected Options From Form Data\n   * @param control\n   */\n  resetSelectedOptionsFromFormData(formData: Object, control: DropdownControl, controls: FormControlBase<any>[]) {\n    formData = this.getSelectedCheckboxesData(formData, controls);\n    const selectedOptions = formData[control.key];\n\n    const newSelectedOptions = [];\n    control.options.map(opt => {\n      if (selectedOptions.indexOf(opt[control.labelValue]) > -1) {\n        // option exist on new list\n        newSelectedOptions.push(opt[control.labelValue]);\n      }\n    });\n    return newSelectedOptions;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n\n  constructor() { }\n  /**\n   * Set scroll position into top\n   */\n  scrollDropdownToTop() {\n    document.querySelector('.panel-searchbox').scrollTop = 0;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChildren\n} from '@angular/core';\nimport { CheckboxControl } from '../models/CheckboxControl';\nimport { ControlTypes } from '../enums/control-types.enum';\nimport {\n  debounceTime,\n  distinctUntilKeyChanged,\n  exhaustMap,\n  map,\n  switchMap,\n  takeUntil,\n  finalize\n} from 'rxjs/operators';\nimport { DropdownControl } from './../models/DropdownControl';\nimport { FormGroup } from '@angular/forms';\nimport { FormControlBase } from './../models/FormControlBase';\nimport { FormControlService } from './../services/form-control.service';\nimport { HelperService } from '../services/helper.service';\nimport { IDynamicOptions } from '../interfaces/IDynamicOptions';\nimport { IFormAction } from '../interfaces/IFormAction';\nimport { MatSelect } from '@angular/material';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'lib-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss']\n})\nexport class DynamicFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() controls: FormControlBase<any>[] = [];\n  @Input() actions: IFormAction;\n  @Output() submit = new EventEmitter<any>();\n  @ViewChildren('dynamicDropdown') dynamicDropdown !: any[];\n\n  unsubscribe$ = new Subject<any>();\n  form: FormGroup;\n  controlTypes = ControlTypes;\n  originControls: FormControlBase<any>[];\n  filterOptions$ = new Subject<IDynamicOptions>();\n  filterControl: DropdownControl;\n  loadMoreOptions$ = new Subject<DropdownControl>();\n  loadMoreControl: DropdownControl;\n\n  constructor(\n    private formControlService: FormControlService,\n    private helperService: HelperService) {\n  }\n\n  ngOnInit() {\n    this.originControls = JSON.parse(JSON.stringify(this.controls));\n    this.form = this.formControlService.toFormGroup(this.controls);\n\n    this.watchFilterDropdownOptions();\n    this.watchLoadMoreDropdownOptions();\n  }\n\n  ngAfterViewInit() {\n    // loop through and add scroll event listener for each dropdown\n    this.dynamicDropdown.forEach(dropdown => {\n      dropdown.openedChange.pipe(\n        takeUntil(this.unsubscribe$)\n      ).subscribe((isOpen) => {\n        if (isOpen) {\n          const select: HTMLElement = dropdown._elementRef.nativeElement;\n          const panel: HTMLElement = dropdown.panel.nativeElement;\n          const controlKey = select.getAttribute('data-key');\n          const control = <DropdownControl>this.getControl(controlKey);\n          if (control && control.supportLoadMore) {\n            panel.addEventListener(\n              'scroll',\n              event => this.loadMoreOptionsOnScroll(\n                event, control\n              ));\n          }\n        } else {\n          this.filterControl = null;\n          this.loadMoreControl = null;\n        }\n      })\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * Get form controls\n   */\n  get formControls() {\n    return this.form.controls;\n  }\n\n  /**\n   * Get control by key\n   * @param key\n   * @param type ControlTypes\n   */\n  getControl(key: string, type = null) {\n    return this.controls.find(c => {\n      if (type) {\n        return c.key === key && c.controlType === type;\n      }\n      return c.key === key;\n    });\n  }\n\n  /**\n   * Load more when scrolled to bottom\n   * @param event\n   * @param control\n   */\n  loadMoreOptionsOnScroll(event, control: DropdownControl) {\n    const { scrollTop, clientHeight, scrollHeight } = event.target;\n    if ((scrollTop + clientHeight) >= scrollHeight && control.supportLoadMore) {\n      this.loadMoreOptions$.next(control);\n    }\n  }\n\n  /**\n   * Update form data\n   * @param data\n   */\n  updateFormData(data: Object) {\n    Object.keys(data).forEach(controlKey => {\n      const checkboxControl = this.getControl(controlKey, ControlTypes.CHECKBOX);\n      let value;\n      if (checkboxControl) {\n        value = this.formControlService\n          .convertCheckboxesToFormData(\n            data[controlKey], <CheckboxControl>checkboxControl\n          );\n      } else {\n        value = data[controlKey];\n      }\n      if (this.form.get(controlKey)) {\n        this.form.get(controlKey).setValue(value);\n      }\n    });\n  }\n\n  /**\n   * Reset form\n   * @param e\n   */\n  resetForm(e) {\n    e.preventDefault();\n    for (let i = 0; i < this.controls.length; i++) {\n      if (this.controls[i] instanceof DropdownControl) {\n        // override only options of dropdown\n        // avoid error when function lost connect with parent\n        (<DropdownControl>this.controls[i]).options = (<DropdownControl>this.originControls[i]).options;\n      }\n    }\n    const formData = this.formControlService.getControlsData(this.originControls);\n    this.updateFormData(formData);\n  }\n\n  /**\n   * Filter options\n   * @param searchText\n   * @param control\n   */\n  onFilterOptions(searchText: string, control: DropdownControl) {\n    if (control.searchOnServer) {\n      this.filterOptions$.next({\n        control,\n        searchText\n      });\n    } else {\n      control.options.map(opt => {\n        // just set attribute hidden for selectop\n        // prevent lost data\n        if (opt[control.labelName].toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n          opt['hidden'] = false;\n        } else {\n          opt['hidden'] = true;\n        }\n      });\n    }\n  }\n\n  /**\n   * Watch filter dropdown options\n   */\n  watchFilterDropdownOptions() {\n    this.filterOptions$.pipe(\n      debounceTime(400),\n      distinctUntilKeyChanged('searchText'),\n      map(value => {\n        this.filterControl = value.control;\n        this.filterControl.loading = true;\n        this.helperService.scrollDropdownToTop();\n        return value;\n      }),\n      switchMap(filter => filter.control.onSearch(filter.searchText)),\n      takeUntil(this.unsubscribe$)\n    ).subscribe(options => {\n      if (Array.isArray(options) && this.filterControl) {\n        const { key, labelValue } = this.filterControl;\n        let formData = { ...this.form.value };\n        formData = this.formControlService.getSelectedCheckboxesData(formData, this.controls);\n\n        const selectedOptionsValue = formData[key];\n        const selectedOptions = this.filterControl.options.filter(\n          opt => selectedOptionsValue.indexOf(opt[labelValue]) > -1\n        );\n\n        // remove duplicated item on selected options\n        const newOptions = options.filter(opt => {\n          const optionValue = opt[labelValue];\n          if (selectedOptions.find(s =>\n            (<DropdownControl>s)[labelValue] === optionValue)\n          ) {\n            return false;\n          }\n          return true;\n        });\n        // make selected element on top of dropdown\n        this.setDropdownOptions(key, [...selectedOptions, ...newOptions]);\n        this.filterControl.loading = false;\n      }\n    });\n  }\n\n  /**\n   * Watch load more dropdown option\n   */\n  watchLoadMoreDropdownOptions() {\n    this.loadMoreOptions$\n      .pipe(\n        debounceTime(400),\n        map(control => {\n          this.loadMoreControl = control;\n          this.loadMoreControl.loading = true;\n          return control;\n        }),\n        exhaustMap(control => control.loadMore(control.searchText)),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(options => {\n        const dropdownControl = <DropdownControl>this.getControl(this.loadMoreControl.key);\n        const { labelValue } = dropdownControl;\n        if (Array.isArray(options) && options.length) {\n          // filter options\n          const filteredOptions = options.filter(opt => {\n            if (dropdownControl.options.find(o => o[labelValue] === opt[labelValue])) {\n              return false;\n            }\n            return true;\n          });\n          dropdownControl.options = [...dropdownControl.options, ...filteredOptions];\n        }\n        this.loadMoreControl.loading = false;\n      });\n  }\n\n  /**\n   * Set dropdown options\n   * @param controlKey\n   * @param options\n   */\n  setDropdownOptions(controlKey: string, options: any[]) {\n    const control = <DropdownControl>this.getControl(controlKey, ControlTypes.DROPDOWN);\n    if (control) {\n      control.options = options;\n\n      // reset selected data from form\n      const newSelectedOptions = this.formControlService\n        .resetSelectedOptionsFromFormData(\n          this.form.value,\n          control,\n          this.controls\n        );\n      this.updateFormData({\n        [controlKey]: newSelectedOptions\n      })\n    }\n  }\n\n  /**\n   * Emit form data to parent\n   * @param e\n   */\n  onSubmit(e) {\n    e.preventDefault();\n    if (this.form.invalid) {\n      this.formControlService.markFormGroupTouched(this.form);\n      return false;\n    }\n\n    let formData = { ...this.form.value };\n    formData = this.formControlService.getSelectedCheckboxesData(formData, this.controls);\n    this.submit.emit(formData);\n  }\n}\n","import { ErrorTypes } from './../../enums/error-types.enum';\nimport { FormErrorService } from './../../services/form-error.service';\nimport { Component, Input } from '@angular/core';\nimport { IValidator } from '../../interfaces/IValidator';\n\n@Component({\n  selector: 'error-messages',\n  templateUrl: './error-messages.component.html',\n  styleUrls: ['./error-messages.component.scss']\n})\nexport class ErrorMessagesComponent {\n  @Input() errors: any;\n  @Input() validators: IValidator[] = [];\n\n  errorTypes = ErrorTypes;\n\n  constructor(private formErrorService: FormErrorService) {}\n\n  getErrorMessage(errorType: string): string {\n    return this.formErrorService.getErrorMessage(this.validators, errorType);\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appDynamicField]'\n})\nexport class DynamicFieldDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { FormGroup } from '@angular/forms';\nimport { Component, OnInit, Input, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { DynamicFieldDirective } from '../../directives/dynamic-field.directive';\nimport { CustomFieldControl } from '../../models/CustomFieldControl';\n\n@Component({\n  selector: 'custom-field',\n  templateUrl: './custom-field.component.html',\n  styleUrls: ['./custom-field.component.scss']\n})\nexport class CustomFieldComponent implements OnInit {\n  @Input() form: FormGroup;\n  @Input() control: CustomFieldControl;\n  @ViewChild(DynamicFieldDirective) customFieldHost: DynamicFieldDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  loadComponent() {\n    let componentFactory = this.componentFactoryResolver\n                                .resolveComponentFactory(this.control.component);\n    let viewContainerRef = this.customFieldHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    let componentRef = viewContainerRef.createComponent(componentFactory);\n    componentRef.instance['form'] = this.form;\n    componentRef.instance['controlKey'] = this.control.key;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DynamicFormComponent } from './dynamic-form.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule, MatCheckboxModule, MatRadioModule, MatSelectModule, MatButtonModule } from '@angular/material';\nimport { ErrorMessagesComponent } from './error-messages/error-messages.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { DynamicFieldDirective } from '../directives/dynamic-field.directive';\nimport { CustomFieldComponent } from './custom-field/custom-field.component';\n\n@NgModule({\n  declarations: [\n    DynamicFormComponent,\n    ErrorMessagesComponent,\n    DynamicFieldDirective,\n    CustomFieldComponent],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    // BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [DynamicFormComponent]\n})\nexport class DynamicFormModule { }\n","import { FormControlBase } from './FormControlBase';\nimport { ControlTypes } from '../enums/control-types.enum';\n\nexport class CheckboxControl extends FormControlBase<boolean[]> {\n  controlType = ControlTypes.CHECKBOX;\n  labelValue: string;\n  labelName: string;\n  options: { value: string; label: string }[] = [];\n\n  constructor(options = {}) {\n    super(options);\n    this.labelValue = options['labelValue'] || '';\n    this.labelName = options['labelName'] || '';\n    this.options = options['options'] || [];\n  }\n}\n","import { FormControlBase } from './FormControlBase';\nimport { ControlTypes } from '../enums/control-types.enum';\n\nexport class RadioGroupControl extends FormControlBase<string | number> {\n  controlType = ControlTypes.RADIO;\n  labelValue: string;\n  labelName: string;\n  options: { value: string; label: string }[] = [];\n\n  constructor(options = {}) {\n    super(options);\n    this.labelValue = options['labelValue'] || '';\n    this.labelName = options['labelName'] || '';\n    this.options = options['options'] || [];\n  }\n}\n","import { FormControlBase } from './FormControlBase';\nimport { ControlTypes } from '../enums/control-types.enum';\n\nexport class TextareaControl extends FormControlBase<string> {\n    controlType = ControlTypes.TEXTAREA;\n\n    constructor(options = {}) {\n        super(options);\n    }\n}\n","import { ControlTypes } from './../enums/control-types.enum';\nimport { FormControlBase } from './FormControlBase';\n\nexport class TextboxControl extends FormControlBase<string> {\n    controlType = ControlTypes.TEXTBOX;\n    type: string;\n\n    constructor(options = {}) {\n        super(options);\n        // set type for text box\n        // exam: text, number...\n        this.type = options['type'] || '';\n    }\n}\n","import { FormControlBase } from './FormControlBase';\nimport { ControlTypes } from '../enums/control-types.enum';\n\nexport class CustomFieldControl extends FormControlBase<any> {\n  controlType = ControlTypes.CUSTOM;\n  component: any;\n\n  constructor(options = {}) {\n    super(options);\n\n    if(options['component']) {\n      this.component = options['component'];\n    }\n  }\n}\n"],"names":["tslib_1.__extends","isObservable","tap","Validators","Injectable","FormControl","FormGroup","FormArray","EventEmitter","Subject","takeUntil","debounceTime","distinctUntilKeyChanged","map","switchMap","exhaustMap","Component","Input","Output","ViewChildren","Directive","ViewContainerRef","ComponentFactoryResolver","ViewChild","NgModule","FormsModule","ReactiveFormsModule","CommonModule","MatInputModule","MatSelectModule","MatCheckboxModule","MatRadioModule","MatButtonModule","MatProgressSpinnerModule"],"mappings":"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"}
