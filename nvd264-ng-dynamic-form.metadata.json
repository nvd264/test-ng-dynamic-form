{"__symbolic":"module","version":4,"metadata":{"DynamicFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"lib-dynamic-form","template":"<form [formGroup]=\"form\" class=\"container\">\n  <!-- Form controls -->\n  <div *ngFor=\"let control of controls\" class=\"form-row\">\n    <div [ngSwitch]=\"control.controlType\">\n      <!-- Text box -->\n      <mat-form-field *ngSwitchCase=\"controlTypes.TEXTBOX\">\n        <input\n          matInput\n          [formControlName]=\"control.key\"\n          [type]=\"control['type']\"\n          [placeholder]=\"control.label\"\n          [required]=\"control.isRequired\"\n          [autocomplete]=\"control['type'] === 'password'\"\n        />\n        <mat-error\n          *ngIf=\"form.get(control.key).errors && form.get(control.key).touched\"\n        >\n          <error-messages\n            [errors]=\"form.get(control.key).errors\"\n            [validators]=\"control.validators\"\n          ></error-messages>\n        </mat-error>\n      </mat-form-field>\n      <!-- End text box -->\n\n      <!-- Textarea -->\n      <mat-form-field *ngSwitchCase=\"controlTypes.TEXTAREA\">\n        <textarea\n          matInput\n          [formControlName]=\"control.key\"\n          [placeholder]=\"control.label\"\n          [required]=\"control.isRequired\"\n        ></textarea>\n        <mat-error\n          *ngIf=\"form.get(control.key).errors && form.get(control.key).touched\"\n        >\n          <error-messages\n            [errors]=\"form.get(control.key).errors\"\n            [validators]=\"control.validators\"\n          ></error-messages>\n        </mat-error>\n      </mat-form-field>\n      <!-- End textarea -->\n\n      <!-- Dropdown -->\n      <mat-form-field *ngSwitchCase=\"controlTypes.DROPDOWN\">\n        <mat-select\n          [placeholder]=\"control.label\"\n          [formControlName]=\"control.key\"\n          [required]=\"control.isRequired\"\n          [multiple]=\"control['multiple']\"\n          [attr.data-key]=\"control.key\"\n          disableOptionCentering\n          #dynamicDropdown\n          [panelClass]=\"!control['hideSearchBox'] ? 'panel-searchbox' : ''\"\n        >\n          <mat-option [class.multiple-select]=\"control['multiple']\" class=\"search-box\" *ngIf=\"!control['hideSearchBox']\" [disabled]=\"true\">\n            <input\n              matInput\n              (ngModelChange)=\"onFilterOptions($event, control)\"\n              [(ngModel)]=\"control['searchText']\"\n              [ngModelOptions]=\"{standalone: true}\"\n              placeholder=\"Enter your search text...\"\n              autocomplete=\"false\"\n              (keydown)=\"$event.stopPropagation()\"\n            >\n            <mat-progress-spinner\n              *ngIf=\"control['loading']\"\n              class=\"search-box-spinner\"\n              color=\"primary\"\n              mode=\"indeterminate\"\n              diameter=\"20\"\n            >\n            </mat-progress-spinner>\n          </mat-option>\n          <ng-container *ngFor=\"let opt of control['options']\">\n            <mat-option\n              *ngIf=\"!opt['hidden']\"\n              [value]=\"\n                control['labelValue'] ? opt[control['labelValue']] : opt.value\n              \"\n            >\n              {{ control['labelName'] ? opt[control['labelName']] : opt.label }}\n            </mat-option>\n          </ng-container>\n        </mat-select>\n      </mat-form-field>\n      <!-- End dropdown -->\n\n      <!-- Checkbox -->\n      <div *ngSwitchCase=\"controlTypes.CHECKBOX\" class=\"custom-section\">\n        <label\n          class=\"custom-mat-form-field-label\"\n          [class.required]=\"control.isRequired\"\n          >{{ control.label }}</label\n        >\n        <section [formArrayName]=\"control.key\" class=\"checkbox-section\">\n          <mat-checkbox\n            *ngFor=\"let chk of form.get(control.key)['controls']; let i = index\"\n            [formControlName]=\"i\"\n            class=\"dyn-checkbox\"\n          >\n            {{\n              control['labelName']\n                ? control['options'][i][control['labelName']]\n                : control['options'][i].label\n            }}\n          </mat-checkbox>\n        </section>\n        <mat-error\n          *ngIf=\"form.get(control.key).errors && form.get(control.key).touched\"\n        >\n          <error-messages\n            [errors]=\"form.get(control.key).errors\"\n            [validators]=\"control.validators\"\n          ></error-messages>\n        </mat-error>\n      </div>\n      <!-- End checkbox -->\n\n      <!-- Radio -->\n      <div *ngSwitchCase=\"controlTypes.RADIO\" class=\"custom-section\">\n        <label\n          class=\"custom-mat-form-field-label\"\n          [class.required]=\"control.isRequired\"\n          >{{ control.label }}</label\n        >\n        <section>\n          <mat-radio-group\n            class=\"example-radio-group\"\n            [formControlName]=\"control.key\"\n          >\n            <mat-radio-button\n              class=\"dyn-radio\"\n              *ngFor=\"let opt of control['options']\"\n              [value]=\"\n                control['labelValue'] ? opt[control['labelValue']] : opt.value\n              \"\n            >\n              {{ control['labelName'] ? opt[control['labelName']] : opt.label }}\n            </mat-radio-button>\n          </mat-radio-group>\n        </section>\n        <mat-error\n          *ngIf=\"form.get(control.key).errors && form.get(control.key).touched\"\n        >\n          <error-messages\n            [errors]=\"form.get(control.key).errors\"\n            [validators]=\"control.validators\"\n          ></error-messages>\n        </mat-error>\n      </div>\n      <!-- End radio -->\n\n      <!-- Custom form field -->\n      <div *ngSwitchCase=\"controlTypes.CUSTOM\" class=\"custom-section\">\n        <custom-field [form]=\"form\" [control]=\"control\"></custom-field>\n        <mat-error\n          *ngIf=\"form.get(control.key).errors && form.get(control.key).touched\"\n        >\n          <error-messages\n            [errors]=\"form.get(control.key).errors\"\n            [validators]=\"control.validators\"\n          ></error-messages>\n        </mat-error>\n      </div>\n      <!-- End Custom form field -->\n    </div>\n  </div>\n  <!-- End form controls -->\n\n  <!-- Actions -->\n  <div class=\"button-row\">\n    <button\n      mat-raised-button\n      [color]=\"actions?.submit?.color || 'primary'\"\n      (click)=\"onSubmit($event)\"\n    >\n      {{ actions?.submit?.label || 'Submit' }}\n    </button>\n\n    <button\n      mat-raised-button\n      [color]=\"actions?.reset?.color || ''\"\n      type=\"button\"\n      (click)=\"resetForm($event)\"\n    >\n      {{ actions?.reset?.label || 'Reset' }}\n    </button>\n  </div>\n  <!-- End actions -->\n</form>\n","styles":[".container{display:flex;flex-direction:column;font-family:Roboto,\"Helvetica Neue\",sans-serif;max-width:100%!important}.container :not(button){width:100%}.button-row a,.button-row button{margin-right:8px}.form-row{margin-bottom:10px}.dyn-checkbox{margin-right:8px}.dyn-radio{margin-bottom:8px}.custom-mat-form-field-label{font-size:12px}.custom-mat-form-field-label.required::after{content:\" *\";display:inline;color:#f44336}::ng-deep .mat-option.search-box .mat-pseudo-checkbox{display:none}::ng-deep .mat-option.search-box{position:absolute;top:0;left:0;background:#fff;z-index:999;border-bottom:1px solid #e7e7e7;min-width:calc(100% + 32px)}::ng-deep .mat-option.search-box.multiple-select{min-width:calc(100% + 64px)}.panel-searchbox{-webkit-transform:none!important;transform:none!important;padding-top:48px}::ng-deep .panel-searchbox{-webkit-transform:none!important;transform:none!important;padding-top:48px!important}.search-box-spinner{position:absolute;right:14px;top:14px}.checkbox-section{display:flex;flex-direction:column}"]}]}],"members":{"controls":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"submit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":39,"character":3}}]}],"dynamicDropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":40,"character":3},"arguments":["dynamicDropdown"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"getControl":[{"__symbolic":"method"}],"loadMoreOptionsOnScroll":[{"__symbolic":"method"}],"updateFormData":[{"__symbolic":"method"}],"resetForm":[{"__symbolic":"method"}],"onFilterOptions":[{"__symbolic":"method"}],"watchFilterDropdownOptions":[{"__symbolic":"method"}],"watchLoadMoreDropdownOptions":[{"__symbolic":"method"}],"setDropdownOptions":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}]}},"DynamicFormModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":11,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"DynamicFormComponent"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"}],"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":23,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":27,"character":4}],"exports":[{"__symbolic":"reference","name":"DynamicFormComponent"}]}]}],"members":{}},"CheckboxControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"DropdownControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"FormControlBase":{"__symbolic":"class","arity":1,"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Expression form not supported","line":12,"character":13,"module":"./models/FormControlBase"}]}]}},"RadioGroupControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"TextareaControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"TextboxControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"CustomFieldControl":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"FormControlBase"},"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[null]}]}},"IAction":{"__symbolic":"interface"},"IValidator":{"__symbolic":"interface"},"IFormAction":{"__symbolic":"interface"},"ErrorTypes":{"REQUIRED":"required","MIN":"min","MAX":"max","MIN_LENGTH":"minlength","MAX_LENGTH":"maxlength","EMAIL":"email","PATTERN":"pattern"},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"toFormGroup":[{"__symbolic":"method"}],"generateCheckboxes":[{"__symbolic":"method"}],"markFormGroupTouched":[{"__symbolic":"method"}],"getControlsData":[{"__symbolic":"method"}],"getSelectedCheckboxesData":[{"__symbolic":"method"}],"convertCheckboxesToFormData":[{"__symbolic":"method"}],"resetSelectedOptionsFromFormData":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"getValidatesInstance":[{"__symbolic":"method"}],"getErrorMessage":[{"__symbolic":"method"}],"getValidateByErrorType":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"scrollDropdownToTop":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"error-messages","template":"<div class=\"errors\">\n  <div *ngIf=\"errors.required\">\n    {{ getErrorMessage(errorTypes.REQUIRED) }}\n  </div>\n  <div *ngIf=\"errors.min\">\n    {{ getErrorMessage(errorTypes.MIN) }}\n  </div>\n  <div *ngIf=\"errors.max\">\n    {{ getErrorMessage(errorTypes.MAX) }}\n  </div>\n  <div *ngIf=\"errors.minlength\">\n    {{ getErrorMessage(errorTypes.MIN_LENGTH) }}\n  </div>\n  <div *ngIf=\"errors.maxlength\">\n    {{ getErrorMessage(errorTypes.MAX_LENGTH) }}\n  </div>\n  <div *ngIf=\"errors.email\">\n    {{ getErrorMessage(errorTypes.EMAIL) }}\n  </div>\n  <div *ngIf=\"errors.pattern\">\n    {{ getErrorMessage(errorTypes.PATTERN) }}\n  </div>\n</div>\n","styles":[".errors{font-family:Roboto,\"Helvetica Neue\",sans-serif;font-size:12px}"]}]}],"members":{"errors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"validators":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"getErrorMessage":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[appDynamicField]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":7,"character":39}]}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"custom-field","template":"<div [formGroup]=\"form\">\n    <ng-template appDynamicField></ng-template>\n</div>\n\n","styles":[""]}]}],"members":{"form":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"customFieldHost":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":13,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵe"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":15,"character":48}]}],"ngOnInit":[{"__symbolic":"method"}],"loadComponent":[{"__symbolic":"method"}]}}},"origins":{"DynamicFormComponent":"./lib/dynamic-form.component","DynamicFormModule":"./lib/dynamic-form.module","CheckboxControl":"./models/CheckboxControl","DropdownControl":"./models/DropdownControl","FormControlBase":"./models/FormControlBase","RadioGroupControl":"./models/RadioGroupControl","TextareaControl":"./models/TextareaControl","TextboxControl":"./models/TextboxControl","CustomFieldControl":"./models/CustomFieldControl","IAction":"./interfaces/IAction","IValidator":"./interfaces/IValidator","IFormAction":"./interfaces/IFormAction","ErrorTypes":"./enums/error-types.enum","ɵa":"./services/form-control.service","ɵb":"./services/form-error.service","ɵc":"./services/helper.service","ɵd":"./lib/error-messages/error-messages.component","ɵe":"./directives/dynamic-field.directive","ɵf":"./lib/custom-field/custom-field.component"},"importAs":"@nvd264/ng-dynamic-form"}